AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Template for autocheckinapp

Globals:
  Function:
    Timeout: 3
    Environment:
      Variables:
        BUCKETNAME: "autocheckin202006"
        REKOGNITIONCOLLECTION: "AutoCheckin" #aws:rekognition:ap-southeast-1:907833590179:collection/AutoCheckin
        REKOGNITIONFACEMATCHTHRESHOLD: 95
        DYNAMODBTABLENAME: "AutoCheckin"
        

Resources:

  AutoCheckInAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: "AutoCheckInAPI"
      Cors: 
        AllowMethods: "'POST, OPTIONS'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      StageName: Prod
      Auth:
        DefaultAuthorizer: MyCognitoAuthorizer
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn: !GetAtt MyCognitoUserPool.Arn
  
  MyCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: "AutoCheckin"
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false
  
  MyCognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref MyCognitoUserPool
      ClientName: "AutoCheckinClient"
      GenerateSecret: false

  RegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: register/
      Handler: app.lambda_handler
      Runtime: python3.6
      Events:
        Register:
          Type: Api
          Properties:
            Path: /register
            Method: post
            RestApiId:
              Ref: AutoCheckInAPI
      Policies:
      - Statement:
        - Sid: AllowRekognitionActions
          Effect: Allow
          Action:
          - rekognition:*
          Resource: '*'
        - Sid: AllowS3Actions
          Effect: Allow
          Action:
          - s3:*
          Resource: '*'
        - Sid: AllowDynamoActions
          Effect: Allow
          Action:
          - dynamodb:*
          Resource: '*'
    Auth:
      Authorizer: NONE
  
  CheckinFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: checkin/
      Handler: app.lambda_handler
      Runtime: python3.6
      Events:
        Register:
          Type: Api
          Properties:
            Path: /checkin
            Method: post
            RestApiId:
              Ref: AutoCheckInAPI
      Policies:
      - Statement:
        - Sid: AllowRekognitionActions
          Effect: Allow
          Action:
          - rekognition:*
          Resource: '*'
        - Sid: AllowS3Actions
          Effect: Allow
          Action:
          - s3:*
          Resource: '*'
        - Sid: AllowDynamoActions
          Effect: Allow
          Action:
          - dynamodb:*
          Resource: '*'

Outputs:
  Api:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${AutoCheckInAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  RegisterFunction:
    Description: "Register Lambda Function ARN"
    Value: !GetAtt RegisterFunction.Arn
  CheckinFunction:
    Description: "Checkin Lambda Function ARN"
    Value: !GetAtt CheckinFunction.Arn
  RegisterFunctionIamRole:
    Description: "Implicit IAM Role created for Register function"
    Value: !GetAtt RegisterFunctionRole.Arn
  CheckinFunctionIamRole:
    Description: "Implicit IAM Role created for Checkin function"
    Value: !GetAtt CheckinFunctionRole.Arn
  DynamoDBTable:
      Description: "DynamoDB Table Name"
      Value: !Ref DynamoDBTable
  CognitoUserPoolId:
      Description: "Cognito User Pool Id"
      Value: !Ref MyCognitoUserPool
